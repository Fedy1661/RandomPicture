{"version":3,"sources":["actions.js","reducer.js","store.js","components/error-boundary/index.js","components/error-boundary/error-boundary.js","components/create-error/index.js","components/create-error/create-error.js","components/Spinner/index.js","components/Spinner/spinner.js","components/image-random/image-random.js","components/image-random/index.js","service/random-picture-service.js","components/Navbar/navbar.js","components/Navbar/index.js","components/App/index.js","components/App/App.js","index.js"],"names":["imageError","type","setUrlImage","payload","dispatch","then","URL","catch","initialState","url","loading","error","createStore","state","applyMiddleware","thunk","ErrorBoundary","hasError","this","props","children","Component","CreateError","Error","Spinner","className","ImageRandom","handleImageLoaded","imageLoaded","handleImageError","err","prevProps","imageRequested","errorMessage","spinner","chooseCategory","imageVisible","ref","onLoad","onError","src","alt","mapDispatchToProps","connect","RandomPicture","getResources","a","async","fetch","result","getRandomDog","image","json","_transformToImage","getRandomGrayscale","getRandomBlur","data","key","Record","title","func","onSetPicture","onClick","variant","class","Navbar","Fragment","id","React","Children","map","child","cloneElement","bindActionCreators","actions","App","randomPictureService","RandomPictureService","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.3a73db4b.chunk.js","sourcesContent":["export const SET_URL_IMAGE = 'SET_URL_IMAGE';\r\nexport const FETCH_IMAGE_REQUEST = 'FETCH_IMAGE_REQUEST';\r\nexport const FETCH_IMAGE_SUCCESS = 'FECTH_IMAGE_SUCCESS';\r\nexport const FETCH_IMAGE_FAILURE = 'FETCH_IMAGE_FAILURE';\r\n// ============================================\r\nexport const imageRequested = () => {\r\n  return {\r\n    type: FETCH_IMAGE_REQUEST\r\n  }\r\n}\r\nexport const imageLoaded = (payload) => {\r\n  return {\r\n    type: FETCH_IMAGE_SUCCESS,\r\n    payload\r\n  }\r\n}\r\nexport const imageError = () => {\r\n  return {\r\n    type: FETCH_IMAGE_FAILURE\r\n  }\r\n}\r\nexport const setUrlImage = (payload) => (dispatch) => {\r\n  payload()\r\n    .then(URL => dispatch({\r\n      type: SET_URL_IMAGE,\r\n      payload: URL\r\n    }))\r\n    .catch(() => dispatch(imageError));\r\n}","import {\r\n  SET_URL_IMAGE,\r\n  FETCH_IMAGE_REQUEST,\r\n  FETCH_IMAGE_FAILURE,\r\n  FETCH_IMAGE_SUCCESS\r\n} from \"./actions\"\r\n\r\nconst initialState = {\r\n  url: null,\r\n  loading: false,\r\n  error: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_URL_IMAGE:\r\n      return {\r\n        ...state,\r\n        url: payload\r\n      }\r\n    case FETCH_IMAGE_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: true\r\n      }\r\n    case FETCH_IMAGE_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n        loading: false\r\n      }\r\n    case FETCH_IMAGE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore , applyMiddleware} from 'redux';\r\nimport reducer from './reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport default createStore(reducer, applyMiddleware(thunk));","import ErrorBoundary from './error-boundary';\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\n\r\nexport default class ErrorBoundary extends Component {\r\n  state = {\r\n    hasError: false\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true }\r\n  }\r\n  render() {\r\n    const { hasError } = this.state;\r\n    if (hasError === true) {\r\n      return (\r\n        <div>\r\n          Oops... Что-то пошло не так... Возможно, стоит перезагурзить страницу.\r\n        </div>\r\n      )\r\n    }\r\n    return this.props.children;\r\n  }\r\n}","import CreateError from './create-error';\r\n\r\nexport default CreateError;","const CreateError = ({ state }) => {\r\n  if (state) {\r\n    throw new Error(':))')\r\n  }\r\n  return '';\r\n}\r\nexport default CreateError;","import Spinner from './spinner';\r\n\r\nexport default Spinner","import React from 'react'\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"loader\"></div>\r\n  )\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport ErrorBoundary from '../error-boundary';\r\nimport CreateError from '../create-error';\r\nimport Spinner from '../Spinner';\r\nimport { connect } from 'react-redux';\r\nimport { imageLoaded, imageRequested, imageError } from '../../actions';\r\n\r\n\r\nclass ImageRandom extends Component {\r\n  UNSAFE_componentWillUpdate(prevProps) {\r\n    if (this.props.url !== prevProps.url) {\r\n      this.props.imageRequested()\r\n    }\r\n  }\r\n  handleImageLoaded = () => {\r\n    this.props.imageLoaded()\r\n  }\r\n  handleImageError = (err) => {\r\n    this.props.imageError()\r\n  }\r\n  render() {\r\n    const { url, state, loading, error } = this.props;\r\n    const errorMessage = error ? `Картинка не загрузилась, выберите другую.` : null;\r\n    const spinner = loading && url ? <Spinner /> : null;\r\n    const chooseCategory = url ? null : 'Выберите категорию';\r\n    const imageVisible = !loading ? 'image-random__image-visible' : null\r\n    return (\r\n      <ErrorBoundary>\r\n        <div className=\"image-random\">\r\n          {errorMessage}\r\n          {spinner}\r\n          {chooseCategory}\r\n          {(url && !error) && <img ref=\"img\"\r\n            onLoad={this.handleImageLoaded}\r\n            onError={this.handleImageError}\r\n            className={`image-random__image ${imageVisible}`}\r\n            src={`${url}`} alt={url} />}\r\n          <CreateError state={state} />\r\n        </div>\r\n      </ErrorBoundary>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = ({ url, loading, error }) => {\r\n  return {\r\n    url, loading, error\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  imageLoaded,\r\n  imageRequested,\r\n  imageError\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageRandom)","import ImageRandom from './image-random';\r\n\r\nexport default ImageRandom;","export default class RandomPicture {\r\n  getResources = async (url) => {\r\n    const result = await fetch(url);\r\n    return result;\r\n  }\r\n  getRandomDog = async () => {\r\n    const image = await this.getResources('https://random.dog/woof.json');\r\n    return this._transformToImage(await image.json(), 'url');\r\n  }\r\n  getRandomGrayscale = async () => {\r\n    const image = await this.getResources('https://picsum.photos/500/500?grayscale');\r\n    return this._transformToImage(image, 'url');\r\n  }\r\n  getRandomBlur = async () => {\r\n    const image = await this.getResources('https://picsum.photos/200/300/?blur')\r\n    return this._transformToImage(image, 'url');\r\n  }\r\n  _transformToImage = (data, key) => {\r\n    return data[key]\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport ErrorBoundary from '../error-boundary';\r\nimport * as actions from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nexport const Record = ({ title, func, onSetPicture }) => {\r\n  return (\r\n    <li className=\"navbar__item nav-item\">\r\n      <button\r\n        onClick={() => onSetPicture(func)}\r\n        variant=\"contained\"\r\n        type=\"button\"\r\n        class=\"navbar__btn btn btn-secondary my-2 my-sm-0\"\r\n      >\r\n        {title}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const { children, onSetPicture } = this.props;\r\n    return (\r\n      <ErrorBoundary>\r\n        <React.Fragment>\r\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <div className=\"navbar-collapse\" id=\"navbarColor01\">\r\n              <ul className=\"navbar mr-auto\">\r\n                {React.Children.map(children, (child) => {\r\n                  return React.cloneElement(child, {\r\n                    title: child.props.title,\r\n                    func: child.props.func,\r\n                    onSetPicture\r\n                  });\r\n                })}\r\n                <li className=\"navbar__item nav-item\"></li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </React.Fragment>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      onSetPicture: actions.setUrlImage\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Navbar);\r\n","import Navbar, { Record } from './navbar';\r\n\r\nexport {\r\n  Record\r\n}\r\n\r\nexport default Navbar;","import App from './App';\r\n\r\nexport default App","import React, { Component } from 'react';\r\n\r\nimport ImageRandom from '../image-random';\r\nimport RandomPictureService from '../../service/random-picture-service';\r\nimport Navbar, { Record } from '../Navbar';\r\nimport ErrorBoundary from '../error-boundary';\r\n\r\nclass App extends Component {\r\n  randomPictureService = new RandomPictureService();\r\n  render() {\r\n    const { getRandomDog,\r\n      getRandomGrayscale,\r\n      getRandomBlur } = this.randomPictureService;\r\n    return (\r\n      <ErrorBoundary>\r\n          <div className=\"container\">\r\n            <Navbar>\r\n              <Record title='Собачка' func={getRandomDog} />\r\n              <Record title='Grayscale' func={getRandomGrayscale} />\r\n              <Record title='Blur' func={getRandomBlur} />\r\n            </Navbar>\r\n            <ImageRandom />\r\n          </div>\r\n      </ErrorBoundary>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './styles/bootstrap.min.css';\r\nimport './styles/index.css';\r\n\r\nimport store from './store';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>, document.getElementById('root'));"],"sourceRoot":""}