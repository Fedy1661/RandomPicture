{"version":3,"sources":["components/error-boundary/index.js","components/error-boundary/error-boundary.js","components/create-error/index.js","components/create-error/create-error.js","components/error-context/index.js","components/hoc-helper/with-error-context.js","components/Spinner/index.js","components/Spinner/spinner.js","components/image-random/index.js","components/image-random/image-random.js","service/random-picture-service.js","components/Navbar/navbar.js","components/Navbar/index.js","components/App/index.js","components/App/App.js","index.js"],"names":["ErrorBoundary","state","hasError","this","props","children","error","Component","CreateError","Error","React","createContext","ErrorProvider","Provider","ErrorConsumer","Consumer","withErrorContext","Wrapped","Spinner","class","ImageRandom","loading","handleImageLoaded","setState","handleImageError","err","console","log","prevProps","urlImage","errorMessage","spinner","chooseCategory","imageVisible","className","ref","onLoad","onError","src","alt","RandomPicture","getResources","url","a","async","fetch","result","getRandomDog","image","json","_transformToImage","getRandomCat","getRandomGrayscale","getRandomBlur","data","key","Record","title","func","onSetPicture","onClick","type","Navbar","onChangeStateError","Fragment","id","Children","map","child","cloneElement","App","randomPictureService","RandomPictureService","handleSetPicture","then","handleChangeStateError","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc99b856.chunk.js","sourcesContent":["import ErrorBoundary from './error-boundary';\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\n\r\nexport default class ErrorBoundary extends Component {\r\n  state = {\r\n    hasError: false\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true }\r\n  }\r\n  render() {\r\n    const { hasError } = this.state;\r\n    if (hasError === true) {\r\n      return (\r\n        <div>\r\n          Oops... Что-то пошло не так... Возможно, стоит перезагурзить страницу.\r\n        </div>\r\n      )\r\n    }\r\n    return this.props.children;\r\n  }\r\n}","import CreateError from './create-error';\r\n\r\nexport default CreateError;","const CreateError = ({ state }) => {\r\n  if (state) {\r\n    throw new Error(':))')\r\n  }\r\n  return '';\r\n}\r\nexport default CreateError;","import React from 'react';\r\n\r\nconst {\r\n  Provider: ErrorProvider,\r\n  Consumer: ErrorConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n  ErrorProvider,\r\n  ErrorConsumer\r\n}","import React from 'react';\r\nimport { ErrorConsumer } from '../error-context';\r\n\r\nconst withErrorContext = (Wrapped) => {\r\n  return (props) => {\r\n    return (\r\n      <ErrorConsumer>\r\n        {\r\n          (state) => {\r\n            return <Wrapped {...props} state={state}/>\r\n          }\r\n        }\r\n      </ErrorConsumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withErrorContext;","import Spinner from './spinner';\r\n\r\nexport default Spinner","import React from 'react'\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div class=\"loader\"></div>\r\n  )\r\n}\r\n\r\nexport default Spinner;","import ImageRandom from './image-random';\r\n\r\nexport default ImageRandom;","import React, { Component } from 'react';\r\nimport ErrorBoundary from '../error-boundary';\r\nimport CreateError from '../create-error';\r\nimport withErrorContext from '../hoc-helper/with-error-context';\r\nimport Spinner from '../Spinner';\r\n\r\n\r\nclass ImageRandom extends Component {\r\n  state = {\r\n    loading: false,\r\n    error: false\r\n  }\r\n  UNSAFE_componentWillUpdate(prevProps) {\r\n    if (this.props.urlImage !== prevProps.urlImage) {\r\n      this.setState({ loading: true, error: false })\r\n    }\r\n  }\r\n  handleImageLoaded = () => {\r\n    this.setState({ loading: false, error: false })\r\n  }\r\n  handleImageError = (err) => {\r\n    console.log(err)\r\n    this.setState({ loading: false, error: true })\r\n  }\r\n  render() {\r\n    const { urlImage, state } = this.props;\r\n    const { loading, error } = this.state;\r\n    const errorMessage = error ? `Картинка не загрузилась, выберите другую.` : null;\r\n    const spinner = loading && urlImage ? <Spinner /> : null;\r\n    const chooseCategory = urlImage ? null : 'Выберите категорию';\r\n    const imageVisible = !loading ? 'image-random__image-visible' : null\r\n    return (\r\n      <ErrorBoundary>\r\n        <div className=\"image-random\">\r\n          {errorMessage}\r\n          {spinner}\r\n          {chooseCategory}\r\n          {(urlImage && !error) && <img ref=\"img\"\r\n            onLoad={this.handleImageLoaded}\r\n            onError={this.handleImageError}\r\n            className={`image-random__image ${imageVisible}`}\r\n            src={`${urlImage}`} alt={urlImage} />}\r\n          <CreateError state={state} />\r\n        </div>\r\n      </ErrorBoundary>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withErrorContext(ImageRandom);","export default class RandomPicture {\r\n  getResources = async (url) => {\r\n    const result = await fetch(url);\r\n    return result;\r\n  }\r\n  getRandomDog = async () => {\r\n    const image = await this.getResources('https://random.dog/woof.json');\r\n    return this._transformToImage(await image.json(), 'url');\r\n  }\r\n  getRandomCat = async () => {\r\n    const image = await this.getResources('https://aws.random.cat/meow');\r\n    return this._transformToImage(await image.json(), 'file');\r\n  }\r\n  getRandomGrayscale = async () => {\r\n    const image = await this.getResources('https://picsum.photos/500/500?grayscale');\r\n    return this._transformToImage(image, 'url');\r\n  }\r\n  getRandomBlur = async () => {\r\n    const image = await this.getResources('https://picsum.photos/200/300/?blur')\r\n    return this._transformToImage(image, 'url');\r\n  }\r\n  _transformToImage = (data, key) => {\r\n    return data[key]\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport ErrorBoundary from '../error-boundary';\r\n\r\nexport const Record = ({ title, func, onSetPicture }) => {\r\n  return (\r\n    <li className=\"navbar__item nav-item\">\r\n      <button\r\n        onClick={() => onSetPicture(func)}\r\n        className=\"navbar__btn btn btn-secondary my-2 my-sm-0\"\r\n        type=\"submit\">\r\n        {title}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const { children, onSetPicture, onChangeStateError } = this.props;\r\n    return (\r\n      <ErrorBoundary>\r\n        <React.Fragment>\r\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n\r\n            <div className=\"navbar-collapse\" id=\"navbarColor01\">\r\n              <ul className=\"navbar mr-auto\">\r\n                {\r\n                  React.Children.map(children, (child) => {\r\n                    return React.cloneElement(child, {\r\n                      title: child.props.title,\r\n                      func: child.props.func,\r\n                      onSetPicture\r\n                    })\r\n                  })\r\n                }\r\n                <li className=\"navbar__item nav-item\">\r\n                  <button onClick={onChangeStateError}\r\n                    className=\"navbar__btn btn btn-secondary my-2 my-sm-0\"\r\n                    type=\"submit\">\r\n                    Error\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </React.Fragment>\r\n      </ErrorBoundary>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navbar;","import Navbar, { Record } from './navbar';\r\n\r\nexport {\r\n  Record\r\n}\r\n\r\nexport default Navbar;","import App from './App';\r\n\r\nexport default App","import React, { Component } from 'react';\r\n\r\nimport ImageRandom from '../image-random';\r\nimport RandomPictureService from '../../service/random-picture-service';\r\nimport Navbar, { Record } from '../Navbar';\r\nimport ErrorBoundary from '../error-boundary';\r\nimport { ErrorProvider } from '../error-context';\r\n\r\nclass App extends Component {\r\n  randomPictureService = new RandomPictureService();\r\n  state = {\r\n    url: null,\r\n    hasError: false\r\n  }\r\n  handleSetPicture = (func) => {\r\n    func().then(url => this.setState({ url }))\r\n  }\r\n  handleChangeStateError = () => {\r\n    this.setState(({ hasError }) => {\r\n      return { hasError: !hasError }\r\n    })\r\n  }\r\n  render() {\r\n    const { getRandomDog,\r\n      getRandomCat,\r\n      getRandomGrayscale,\r\n      getRandomBlur } = this.randomPictureService;\r\n    const { url, hasError } = this.state;\r\n    return (\r\n      <ErrorBoundary>\r\n        <ErrorProvider value={hasError}>\r\n          <div className=\"container\">\r\n            <Navbar onSetPicture={this.handleSetPicture}\r\n              onChangeStateError={this.handleChangeStateError}>\r\n              <Record title='Собачка' func={getRandomDog} />\r\n              <Record title='Кошечка' func={getRandomCat} />\r\n              <Record title='Grayscale' func={getRandomGrayscale} />\r\n              <Record title='Blur' func={getRandomBlur} />\r\n            </Navbar>\r\n            <ImageRandom urlImage={url} />\r\n          </div>\r\n        </ErrorProvider>\r\n      </ErrorBoundary>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './styles/bootstrap.min.css';\r\nimport './styles/index.css';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}