{"version":3,"sources":["actions.js","reducer.js","store.js","components/error-boundary/index.js","components/error-boundary/error-boundary.js","components/create-error/index.js","components/create-error/create-error.js","components/error-context/index.js","components/hoc-helper/with-error-context.js","components/Spinner/index.js","components/Spinner/spinner.js","components/image-random/image-random.js","components/image-random/index.js","utils/compose.js","service/random-picture-service.js","components/Navbar/navbar.js","components/Navbar/index.js","components/App/index.js","components/App/App.js","index.js"],"names":["imageError","type","setUrlImage","payload","dispatch","then","URL","catch","initialState","url","loading","error","createStore","state","applyMiddleware","thunk","ErrorBoundary","hasError","this","props","children","Component","CreateError","Error","React","createContext","ErrorProvider","Provider","ErrorConsumer","Consumer","withErrorContext","Wrapped","Spinner","className","ImageRandom","handleImageLoaded","imageLoaded","handleImageError","err","prevProps","imageRequested","errorMessage","spinner","chooseCategory","imageVisible","ref","onLoad","onError","src","alt","mapDispatchToProps","funcs","comp","reduceRight","wrapped","f","compose","connect","RandomPicture","getResources","a","async","fetch","result","getRandomDog","image","json","_transformToImage","getRandomCat","getRandomGrayscale","getRandomBlur","data","key","Record","title","func","onSetPicture","onClick","Navbar","onChangeStateError","Fragment","id","Children","map","child","cloneElement","bindActionCreators","actions","App","randomPictureService","RandomPictureService","handleSetPicture","setState","handleChangeStateError","value","urlImage","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.4af55f07.chunk.js","sourcesContent":["export const SET_URL_IMAGE = 'SET_URL_IMAGE';\r\nexport const FETCH_IMAGE_REQUEST = 'FETCH_IMAGE_REQUEST';\r\nexport const FETCH_IMAGE_SUCCESS = 'FECTH_IMAGE_SUCCESS';\r\nexport const FETCH_IMAGE_FAILURE = 'FETCH_IMAGE_FAILURE';\r\n// ============================================\r\nexport const imageRequested = () => {\r\n  return {\r\n    type: FETCH_IMAGE_REQUEST\r\n  }\r\n}\r\nexport const imageLoaded = (payload) => {\r\n  return {\r\n    type: FETCH_IMAGE_SUCCESS,\r\n    payload\r\n  }\r\n}\r\nexport const imageError = () => {\r\n  return {\r\n    type: FETCH_IMAGE_FAILURE\r\n  }\r\n}\r\nexport const setUrlImage = (payload) => (dispatch) => {\r\n  payload()\r\n    .then(URL => dispatch({\r\n      type: SET_URL_IMAGE,\r\n      payload: URL\r\n    }))\r\n    .catch(() => dispatch(imageError));\r\n}","import {\r\n  SET_URL_IMAGE,\r\n  FETCH_IMAGE_REQUEST,\r\n  FETCH_IMAGE_FAILURE,\r\n  FETCH_IMAGE_SUCCESS\r\n} from \"./actions\"\r\n\r\nconst initialState = {\r\n  url: null,\r\n  loading: false,\r\n  error: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_URL_IMAGE:\r\n      return {\r\n        ...state,\r\n        url: payload\r\n      }\r\n    case FETCH_IMAGE_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: true\r\n      }\r\n    case FETCH_IMAGE_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n        loading: false\r\n      }\r\n    case FETCH_IMAGE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore , applyMiddleware} from 'redux';\r\nimport reducer from './reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport default createStore(reducer, applyMiddleware(thunk));","import ErrorBoundary from './error-boundary';\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\n\r\nexport default class ErrorBoundary extends Component {\r\n  state = {\r\n    hasError: false\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true }\r\n  }\r\n  render() {\r\n    const { hasError } = this.state;\r\n    if (hasError === true) {\r\n      return (\r\n        <div>\r\n          Oops... Что-то пошло не так... Возможно, стоит перезагурзить страницу.\r\n        </div>\r\n      )\r\n    }\r\n    return this.props.children;\r\n  }\r\n}","import CreateError from './create-error';\r\n\r\nexport default CreateError;","const CreateError = ({ state }) => {\r\n  if (state) {\r\n    throw new Error(':))')\r\n  }\r\n  return '';\r\n}\r\nexport default CreateError;","import React from 'react';\r\n\r\nconst {\r\n  Provider: ErrorProvider,\r\n  Consumer: ErrorConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n  ErrorProvider,\r\n  ErrorConsumer\r\n}","import React from 'react';\r\nimport { ErrorConsumer } from '../error-context';\r\n\r\nconst withErrorContext = (Wrapped) => {\r\n  return (props) => {\r\n    return (\r\n      <ErrorConsumer>\r\n        {\r\n          (state) => {\r\n            return <Wrapped {...props} state={state}/>\r\n          }\r\n        }\r\n      </ErrorConsumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withErrorContext;","import Spinner from './spinner';\r\n\r\nexport default Spinner","import React from 'react'\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"loader\"></div>\r\n  )\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport ErrorBoundary from '../error-boundary';\r\nimport CreateError from '../create-error';\r\nimport withErrorContext from '../hoc-helper/with-error-context';\r\nimport Spinner from '../Spinner';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from '../../utils';\r\nimport { imageLoaded, imageRequested, imageError } from '../../actions';\r\n\r\n\r\nclass ImageRandom extends Component {\r\n  UNSAFE_componentWillUpdate(prevProps) {\r\n    if (this.props.url !== prevProps.url) {\r\n      this.props.imageRequested()\r\n    }\r\n  }\r\n  handleImageLoaded = () => {\r\n    this.props.imageLoaded()\r\n  }\r\n  handleImageError = (err) => {\r\n    this.props.imageError()\r\n  }\r\n  render() {\r\n    const { url, state, loading, error } = this.props;\r\n    const errorMessage = error ? `Картинка не загрузилась, выберите другую.` : null;\r\n    const spinner = loading && url ? <Spinner /> : null;\r\n    const chooseCategory = url ? null : 'Выберите категорию';\r\n    const imageVisible = !loading ? 'image-random__image-visible' : null\r\n    return (\r\n      <ErrorBoundary>\r\n        <div className=\"image-random\">\r\n          {errorMessage}\r\n          {spinner}\r\n          {chooseCategory}\r\n          {(url && !error) && <img ref=\"img\"\r\n            onLoad={this.handleImageLoaded}\r\n            onError={this.handleImageError}\r\n            className={`image-random__image ${imageVisible}`}\r\n            src={`${url}`} alt={url} />}\r\n          <CreateError state={state} />\r\n        </div>\r\n      </ErrorBoundary>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = ({ url, loading, error }) => {\r\n  return {\r\n    url, loading, error\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  imageLoaded,\r\n  imageRequested,\r\n  imageError\r\n}\r\nexport default compose(\r\n  withErrorContext,\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(ImageRandom)","import ImageRandom from './image-random';\r\n\r\nexport default ImageRandom;","export default (...funcs) => comp => {\r\n  return funcs.reduceRight((wrapped, f) => f(wrapped), comp);\r\n};\r\n","export default class RandomPicture {\r\n  getResources = async (url) => {\r\n    const result = await fetch(url);\r\n    return result;\r\n  }\r\n  getRandomDog = async () => {\r\n    const image = await this.getResources('https://random.dog/woof.json');\r\n    return this._transformToImage(await image.json(), 'url');\r\n  }\r\n  getRandomCat = async () => {\r\n    const image = await this.getResources('https://aws.random.cat/meow');\r\n    return this._transformToImage(await image.json(), 'file');\r\n  }\r\n  getRandomGrayscale = async () => {\r\n    const image = await this.getResources('https://picsum.photos/500/500?grayscale');\r\n    return this._transformToImage(image, 'url');\r\n  }\r\n  getRandomBlur = async () => {\r\n    const image = await this.getResources('https://picsum.photos/200/300/?blur')\r\n    return this._transformToImage(image, 'url');\r\n  }\r\n  _transformToImage = (data, key) => {\r\n    return data[key]\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport ErrorBoundary from '../error-boundary';\r\nimport * as actions from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nexport const Record = ({ title, func, onSetPicture }) => {\r\n  return (\r\n    <li className=\"navbar__item nav-item\">\r\n      <button\r\n        onClick={() => onSetPicture(func)}\r\n        className=\"navbar__btn btn btn-secondary my-2 my-sm-0\"\r\n        type=\"submit\">\r\n        {title}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const { children, onSetPicture, onChangeStateError } = this.props;\r\n    return (\r\n      <ErrorBoundary>\r\n        <React.Fragment>\r\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n\r\n            <div className=\"navbar-collapse\" id=\"navbarColor01\">\r\n              <ul className=\"navbar mr-auto\">\r\n                {\r\n                  React.Children.map(children, (child) => {\r\n                    return React.cloneElement(child, {\r\n                      title: child.props.title,\r\n                      func: child.props.func,\r\n                      onSetPicture\r\n                    })\r\n                  })\r\n                }\r\n                <li className=\"navbar__item nav-item\">\r\n                  <button onClick={onChangeStateError}\r\n                    className=\"navbar__btn btn btn-secondary my-2 my-sm-0\"\r\n                    type=\"submit\">\r\n                    Error\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </React.Fragment>\r\n      </ErrorBoundary>\r\n    )\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch)  => {\r\n  return bindActionCreators({\r\n    onSetPicture: actions.setUrlImage\r\n  }, dispatch)\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Navbar);","import Navbar, { Record } from './navbar';\r\n\r\nexport {\r\n  Record\r\n}\r\n\r\nexport default Navbar;","import App from './App';\r\n\r\nexport default App","import React, { Component } from 'react';\r\n\r\nimport ImageRandom from '../image-random';\r\nimport RandomPictureService from '../../service/random-picture-service';\r\nimport Navbar, { Record } from '../Navbar';\r\nimport ErrorBoundary from '../error-boundary';\r\nimport { ErrorProvider } from '../error-context';\r\n\r\nclass App extends Component {\r\n  randomPictureService = new RandomPictureService();\r\n  state = {\r\n    url: null,\r\n    hasError: false\r\n  }\r\n  handleSetPicture = (func) => {\r\n    func().then(url => this.setState({ url }))\r\n  }\r\n  handleChangeStateError = () => {\r\n    this.setState(({ hasError }) => {\r\n      return { hasError: !hasError }\r\n    })\r\n  }\r\n  render() {\r\n    const { getRandomDog,\r\n      getRandomCat,\r\n      getRandomGrayscale,\r\n      getRandomBlur } = this.randomPictureService;\r\n    const { url, hasError } = this.state;\r\n    return (\r\n      <ErrorBoundary>\r\n        <ErrorProvider value={hasError}>\r\n          <div className=\"container\">\r\n            <Navbar\r\n              onChangeStateError={this.handleChangeStateError}>\r\n              <Record title='Собачка' func={getRandomDog} />\r\n              <Record title='Кошечка' func={getRandomCat} />\r\n              <Record title='Grayscale' func={getRandomGrayscale} />\r\n              <Record title='Blur' func={getRandomBlur} />\r\n            </Navbar>\r\n            <ImageRandom urlImage={url} />\r\n          </div>\r\n        </ErrorProvider>\r\n      </ErrorBoundary>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './styles/bootstrap.min.css';\r\nimport './styles/index.css';\r\n\r\nimport store from './store';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>, document.getElementById('root'));"],"sourceRoot":""}